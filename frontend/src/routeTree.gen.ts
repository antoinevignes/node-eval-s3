/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UserLoginRouteImport } from './routes/user/login'
import { Route as MaterialIdRouteImport } from './routes/material/$id'
import { Route as FurnitureIdRouteImport } from './routes/furniture/$id'
import { Route as AdminDashboardRouteImport } from './routes/admin/dashboard'
import { Route as AdminFurnitureAddRouteImport } from './routes/admin/furniture/add'
import { Route as AdminFurnitureIdRouteImport } from './routes/admin/furniture/$id'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserLoginRoute = UserLoginRouteImport.update({
  id: '/user/login',
  path: '/user/login',
  getParentRoute: () => rootRouteImport,
} as any)
const MaterialIdRoute = MaterialIdRouteImport.update({
  id: '/material/$id',
  path: '/material/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const FurnitureIdRoute = FurnitureIdRouteImport.update({
  id: '/furniture/$id',
  path: '/furniture/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminDashboardRoute = AdminDashboardRouteImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminFurnitureAddRoute = AdminFurnitureAddRouteImport.update({
  id: '/admin/furniture/add',
  path: '/admin/furniture/add',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminFurnitureIdRoute = AdminFurnitureIdRouteImport.update({
  id: '/admin/furniture/$id',
  path: '/admin/furniture/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/furniture/$id': typeof FurnitureIdRoute
  '/material/$id': typeof MaterialIdRoute
  '/user/login': typeof UserLoginRoute
  '/admin/furniture/$id': typeof AdminFurnitureIdRoute
  '/admin/furniture/add': typeof AdminFurnitureAddRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/furniture/$id': typeof FurnitureIdRoute
  '/material/$id': typeof MaterialIdRoute
  '/user/login': typeof UserLoginRoute
  '/admin/furniture/$id': typeof AdminFurnitureIdRoute
  '/admin/furniture/add': typeof AdminFurnitureAddRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/furniture/$id': typeof FurnitureIdRoute
  '/material/$id': typeof MaterialIdRoute
  '/user/login': typeof UserLoginRoute
  '/admin/furniture/$id': typeof AdminFurnitureIdRoute
  '/admin/furniture/add': typeof AdminFurnitureAddRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin/dashboard'
    | '/furniture/$id'
    | '/material/$id'
    | '/user/login'
    | '/admin/furniture/$id'
    | '/admin/furniture/add'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin/dashboard'
    | '/furniture/$id'
    | '/material/$id'
    | '/user/login'
    | '/admin/furniture/$id'
    | '/admin/furniture/add'
  id:
    | '__root__'
    | '/'
    | '/admin/dashboard'
    | '/furniture/$id'
    | '/material/$id'
    | '/user/login'
    | '/admin/furniture/$id'
    | '/admin/furniture/add'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  FurnitureIdRoute: typeof FurnitureIdRoute
  MaterialIdRoute: typeof MaterialIdRoute
  UserLoginRoute: typeof UserLoginRoute
  AdminFurnitureIdRoute: typeof AdminFurnitureIdRoute
  AdminFurnitureAddRoute: typeof AdminFurnitureAddRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/login': {
      id: '/user/login'
      path: '/user/login'
      fullPath: '/user/login'
      preLoaderRoute: typeof UserLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/material/$id': {
      id: '/material/$id'
      path: '/material/$id'
      fullPath: '/material/$id'
      preLoaderRoute: typeof MaterialIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/furniture/$id': {
      id: '/furniture/$id'
      path: '/furniture/$id'
      fullPath: '/furniture/$id'
      preLoaderRoute: typeof FurnitureIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/furniture/add': {
      id: '/admin/furniture/add'
      path: '/admin/furniture/add'
      fullPath: '/admin/furniture/add'
      preLoaderRoute: typeof AdminFurnitureAddRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/furniture/$id': {
      id: '/admin/furniture/$id'
      path: '/admin/furniture/$id'
      fullPath: '/admin/furniture/$id'
      preLoaderRoute: typeof AdminFurnitureIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  FurnitureIdRoute: FurnitureIdRoute,
  MaterialIdRoute: MaterialIdRoute,
  UserLoginRoute: UserLoginRoute,
  AdminFurnitureIdRoute: AdminFurnitureIdRoute,
  AdminFurnitureAddRoute: AdminFurnitureAddRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
